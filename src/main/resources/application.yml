info.app:
  name: HMPPS Prison To Probation Update
  version: 1.0

spring:
  application:
    name: prison-to-probation-update

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${oauth.endpoint.url}/.well-known/jwks.json

      client:
        registration:
          prison-api:
            provider: hmpps-auth
            client-id: ${prisontoprobation.client.client-id}
            client-secret: ${prisontoprobation.client.client-secret}
            authorization-grant-type: client_credentials
            scope: read
          probation-api:
            provider: hmpps-auth
            client-id: ${prisontoprobation.client.client-id}
            client-secret: ${prisontoprobation.client.client-secret}
            authorization-grant-type: client_credentials
            scope: read
          offender-search-api:
            provider: hmpps-auth
            client-id: ${prisontoprobation.client.client-id}
            client-secret: ${prisontoprobation.client.client-secret}
            authorization-grant-type: client_credentials
            scope: read
        provider:
          hmpps-auth:
            token-uri: ${oauth.endpoint.url}/oauth/token
  profiles:
    group:
      test:
        - "stdout"
      smoke-test:
        - "stdout"
server:
  port: 8082
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto

logging:
  level:
    org.springframework: INFO
    org.springframework.security: INFO
    uk.gov.justice.digital: DEBUG

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health, prometheus'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: always
      probes:
        enabled: true
    info:
      cache:
        time-to-live: 2000ms

oauth:
  token.url: ${oauth.endpoint.url}/oauth/token

prisontoprobation:
  only.prisons: ''
  message-processor:
    delay: 1000
    enabled: true
  hold-back:
    duration: 15m
  client:
    client-id: ${oauth.client.id}
    client-secret: ${oauth.client.secret}
    access-token-uri: ${oauth.token.url}
    authentication-scheme: header
    client-authentication-scheme: header

graceful:
  shutdown.enabled: true

azure:
  application-insights.web.enable-W3C: true

aws:
  provider: aws
  region: eu-west-2

hmpps.sqs:
  provider: ${aws.provider}
  region: ${aws.region}
  queueAdminRole: ROLE_PTPU_QUEUE_ADMIN
  queues:
    prisonEventQueue:
      queueName: ${sqs.queue.name}
      queueAccessKeyId: ${sqs.aws.access.key.id}
      queueSecretAccessKey: ${sqs.aws.secret.access.key}
      dlqName: ${sqs.dlq.name}
      dlqAccessKeyId: ${sqs.aws.dlq.access.key.id}
      dlqSecretAccessKey: ${sqs.aws.dlq.secret.access.key}
    hmppsDomainEventQueue:
      queueName: ${sqs.hmpps.queue.name}
      queueAccessKeyId: ${sqs.hmpps.aws.access.key.id}
      queueSecretAccessKey: ${sqs.hmpps.aws.secret.access.key}
      dlqName: ${sqs.hmpps.dlq.name}
      dlqAccessKeyId: ${sqs.hmpps.aws.dlq.access.key.id}
      dlqSecretAccessKey: ${sqs.hmpps.aws.dlq.secret.access.key}

hmpps.dynamodb:
  region: ${aws.region}
  provider: ${aws.provider}
  tableName: ${dynamodb.tablename}
  tableAccessKeyId: ${dynamodb.aws.access.key.id}
  tableSecretAccessKey: ${dynamodb.aws.secret.access.key}
  scheduleTableName: ${dynamodb.schedule.tablename}
  scheduleTableAccessKeyId: ${dynamodb.schedule.aws.access.key.id}
  scheduleTableSecretAccessKey: ${dynamodb.schedule.aws.secret.access.key}


retry:
  schedules:
    short:
      cron: "0 0 * * * *"
    medium:
      cron: "0 15 */4 * * *"
    long:
      cron: "0 30 23 * * *"

package uk.gov.justice.digital.hmpps.prisontoprobation.entity

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter
import java.time.LocalDateTime
import java.time.ZoneOffset


@DynamoDBTable(tableName = "Message") // table name will be dynamically amended via config
data class Message(
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    var id: String? = null,
    @DynamoDBAttribute
    var bookingId: Long = 0L,
    @DynamoDBAttribute
    var retryCount: Int = 1,
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter::class)
    var createdDate: LocalDateTime = LocalDateTime.now(),
    @DynamoDBAttribute
    var deleteBy: Long =  LocalDateTime.now().plusWeeks(1).toEpochSecond(ZoneOffset.UTC),
    @DynamoDBAttribute
    var eventType: String = "",
    @DynamoDBAttribute
    var message: String = ""
) {
  fun retry(): Message {
    retryCount += 1
    return this
  }
}

class LocalDateTimeConverter : DynamoDBTypeConverter<String, LocalDateTime> {
  override fun convert(time: LocalDateTime): String {
    return time.toString()
  }

  override fun unconvert(stringValue: String): LocalDateTime {
    return LocalDateTime.parse(stringValue)
  }
}